{
  "React.useState": {
    "prefix": "re:us",
    "body": [
      "const [${1}, set${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}] = React.useState(${2:initial${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}})$0"
    ]
  },
  "React.useEffect": {
    "prefix": "re:uf",
    "body": ["React.useEffect(() => {", "  $0", "}, []);"]
  },
  "React.useReducer": {
    "prefix": "re:ur",
    "body": [
      "const [state, dispatch] = React.useReducer(${0:someReducer}, {",
      "  ",
      "})"
    ]
  },
  "React.useRef": {
    "prefix": "re:urf",
    "body": ["const ${1:someRef} = React.useRef($0)"]
  },
  "React Functional Component": {
    "prefix": "re:rc",
    "body": [
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  )",
      "}"
    ]
  },
  "Next Pages": {
    "prefix": "np",
    "body": [
      "import * as React from 'react';\n",
      "import Seo from '@/components/Seo';\n",
      "export default function ${1:${TM_FILENAME_BASE/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}}Page() {",
      "  return (",
      "    <>",
      "      <Seo templateTitle='${1:${TM_FILENAME_BASE/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}}' />\n",
      "      <main>\n",
      "        <section className=''>",
      "          <div className='layout'>",
      "            $0",
      "          </div>",
      "        </section>",
      "      </main>",
      "    </>",
      "  )",
      "}"
    ]
  },
  // custom
  "REACT - ClassNames": {
    "prefix": "re:cn",
    "body": ["className={classNames('$1',className)}"],
    "description": "Add a classname prop"
  },
  "REACT - arrow function": {
    "prefix": "re:fn",
    "body": ["  const $1 = () => {  $2  }"],
    "description": "Add a arrow function"
  },
  "REACT - useCallback arrow function": {
    "prefix": "re:fncb",
    "body": ["  const $1 = useCallback(() => {  $2  },[])"],
    "description": "Add a useCallback with arrow function"
  },
  "REACT - useHistory": {
    "prefix": "re:uh",
    "body": ["const history = useHistory();"],
    "description": "Add history hook"
  },
  "REACT - useLocation": {
    "prefix": "re:ul",
    "body": ["const history = useLocation();"],
    "description": "Add location hook"
  },
  "REACT - useState": {
    "prefix": "re:us",
    "body": "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2)",
    "description": "Add useState hook"
  },
  "REACT - useStore": {
    "prefix": "re:st",
    "body": "const $1 = useStore((store) => store.$1)",
    "description": "Add useState hook"
  }
}
